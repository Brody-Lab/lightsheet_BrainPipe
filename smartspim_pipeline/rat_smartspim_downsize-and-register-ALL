#!/bin/env bash
#
#SBATCH -p Brody                # partition (queue)
#SBATCH -c 1                      # number of cores
#SBATCH -t 10                # time (minutes)
#SBATCH -o /scratch/ejdennis/logs/spim_downsize_n_register_%j.out        # STDOUT #add _%a to see each array job
#SBATCH -e /scratch/ejdennis/logs/spim_downsize_n_register_%j.err        # STDERR #add _%a to see each array job

echo "In the directory: `pwd` "
echo "As the user: `whoami` "
echo "on host: `hostname` "

#specifications
cat /proc/$$/status | grep Cpus_allowed_list
cat /proc/meminfo

module load anacondapy/5.3.1
. activate lightsheet

# should be able to provide a PROJECT folder like this /jukebox/LightSheetData/lightserv/pbibawi/pb_udisco_647_488_4x/
# and a SAVE folder /scratch/ejdennis/projectout
# then index into project folder using array

echo "input folder:" "$1"
echo "save folder:" "$2"
echo "Array Index: $SLURM_ARRAY_TASK_ID"

#downsize
python spim_downsize.py "$1"

#register
python spim_register.py 0 "$1"

#register inverse
python spim_register.py 1 "$1"

#REGISTER functionality
#takes 3 command line arguments max
#stepid = int(sys.argv[1]) - regular or inverse transform, mostly just need inverse for cells/atlas
#src = str(sys.argv[2]) - folder to stitched images, e.g. /jukebox/LightSheetTransfer/tp/20200701_12_55_28_20170207_db_bl6_crii_rpv_01/
#reg = str(sys.argv[3]) - folder fo registration channel, e.g. Ex_488_Em_0

#functionality
#go to smartspim_pipeline folder and type sbatch --array= 1-4 spim_downsize_n_register.sh
# [path to main image folder] [save folder]
# this would deal with the first 4 folders in the project folder
